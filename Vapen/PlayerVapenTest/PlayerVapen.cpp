//
// Created by Henrik Ravnborg on 2023-12-05.
//

#include "PlayerVapen.h"
#include "../../Spelaren/Player.h"

PlayerVapen::PlayerVapen() {
    this->baseFireRate = 1000;
    this->baseDamage = 10;
    this->baseSpeed = 1;
    this->fireRate = 50;
}

void PlayerVapen::shoot(float x, float y, float playerBulletSpeed) {
    if (playerClock.getElapsedTime().asMilliseconds() > Vapen::getPlayerFireRate()) {
        spelarBullets.emplace_back(x, y, playerBulletSpeed + baseSpeed, baseDamage + Player::getExtraDmg());
        playerClock.restart();
    }
}

void PlayerVapen::clearBullets() {
    spelarBullets.clear();
}
 void PlayerVapen::drawBullets(sf::RenderWindow &window) {
    for (int i = 0; i < spelarBullets.size(); i++) {
        spelarBullets[i].draw(window);
    }
}

std::vector<NyPlayerBullets> &PlayerVapen::getPlayerBullets() {
    return spelarBullets;
}

void PlayerVapen::updateBullets() {
    for (auto it = spelarBullets.begin(); it != spelarBullets.end(); ) {
        it->updateBullet();
        if (it->getBullet().getPosition().y < 0) {
            it = spelarBullets.erase(it);
        } else {
            ++it;
        }
    }
}
